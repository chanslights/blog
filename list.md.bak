---
title: 文章列表
permalink: /blog/list
---

# 我的博客文章

<div id="blog-list-app">
  <div class="blog-list-container">
    <!-- 搜索和筛选 -->
    <div class="filter-section">
      <div class="search-box">
        <input 
          type="text" 
          v-model="searchKeyword" 
          placeholder="搜索文章标题或内容..."
          class="search-input"
        />
      </div>
      
      <div class="filter-box">
        <select v-model="selectedCategory" class="category-filter">
          <option value="">所有分类</option>
          <option value="技术分享">技术分享</option>
          <option value="学习笔记">学习笔记</option>
          <option value="项目实战">项目实战</option>
          <option value="生活随笔">生活随笔</option>
          <option value="其他">其他</option>
        </select>
      </div>
    </div>
    
    <!-- 文章统计 -->
    <div class="stats-section">
      <div class="stat-item">
        <span class="stat-number">{{ filteredArticles.length }}</span>
        <span class="stat-label">篇文章</span>
      </div>
      <div class="stat-item">
        <span class="stat-number">{{ totalCategories }}</span>
        <span class="stat-label">个分类</span>
      </div>
    </div>
    
    <!-- 文章列表 -->
    <div v-if="filteredArticles.length > 0" class="articles-grid">
      <div 
          v-for="article in paginatedArticles" 
          :key="article.fileName || 'unknown'" 
          class="article-card"
          @click="viewArticle(article)"
        >
          <div class="article-header">
            <h3 class="article-title">{{ article.title || '无标题' }}</h3>
            <span class="article-category">{{ article.category || '未分类' }}</span>
          </div>
          
          <div class="article-meta">
            <span class="upload-time">
              <i class="icon-time">📅</i>
              {{ formatDate(article.uploadTime) }}
            </span>
          </div>
          
          <div v-if="article.description" class="article-description">
            {{ article.description }}
          </div>
          
          <div v-if="article.tags && article.tags.length > 0" class="article-tags">
            <span 
              v-for="tag in article.tags" 
              :key="tag" 
              class="tag"
            >
              {{ tag }}
            </span>
          </div>
          
          <div class="article-actions">
            <button @click.stop="editArticle(article)" class="action-btn edit-btn">
              编辑
            </button>
            <button @click.stop="deleteArticle(article)" class="action-btn delete-btn">
              删除
            </button>
          </div>
        </div>
    </div>
    
    <!-- 空状态 -->
    <div v-else class="empty-state">
      <div class="empty-icon">📝</div>
      <h3>暂无文章</h3>
      <p>{{ searchKeyword || selectedCategory ? '没有找到匹配的文章' : '还没有上传任何文章' }}</p>
      <a href="/blog/upload" class="upload-link">上传第一篇文章</a>
    </div>
    
    <!-- 分页 -->
    <div v-if="totalPages > 1" class="pagination">
      <button 
        @click="currentPage = Math.max(1, currentPage - 1)"
        :disabled="currentPage === 1"
        class="page-btn"
      >
        上一页
      </button>
      
      <span class="page-info">
        第 {{ currentPage }} 页，共 {{ totalPages }} 页
      </span>
      
      <button 
        @click="currentPage = Math.min(totalPages, currentPage + 1)"
        :disabled="currentPage === totalPages"
        class="page-btn"
      >
        下一页
      </button>
    </div>
  </div>
  
  <!-- 文章详情模态框 -->
  <div v-if="selectedArticle" class="modal-overlay" @click="closeModal">
    <div class="modal-content" @click.stop>
      <div class="modal-header">
        <h2>{{ selectedArticle.title || '无标题' }}</h2>
        <button @click="closeModal" class="close-btn">×</button>
      </div>
      
      <div class="modal-body">
        <div class="article-info">
          <span class="info-item">分类: {{ selectedArticle.category || '未分类' }}</span>
          <span class="info-item">时间: {{ formatDate(selectedArticle.uploadTime) }}</span>
        </div>
        
        <div class="article-content" v-html="renderMarkdown(selectedArticle.content || '')"></div>
      </div>
    </div>
  </div>
</div>

<script>
export default {
  data() {
    return {
      articles: [],
      searchKeyword: '',
      selectedCategory: '',
      currentPage: 1,
      pageSize: 6,
      selectedArticle: null
    }
  },
  
  computed: {
    filteredArticles() {
      let filtered = this.articles;
      
      // 按关键词搜索
      if (this.searchKeyword) {
        const keyword = this.searchKeyword.toLowerCase();
        filtered = filtered.filter(article => 
          article.title.toLowerCase().includes(keyword) ||
          article.content.toLowerCase().includes(keyword) ||
          (article.description && article.description.toLowerCase().includes(keyword))
        );
      }
      
      // 按分类筛选
      if (this.selectedCategory) {
        filtered = filtered.filter(article => article.category === this.selectedCategory);
      }
      
      return filtered;
    },
    
    paginatedArticles() {
      const start = (this.currentPage - 1) * this.pageSize;
      const end = start + this.pageSize;
      return this.filteredArticles.slice(start, end);
    },
    
    totalPages() {
      return Math.ceil(this.filteredArticles.length / this.pageSize);
    },
    
    totalCategories() {
      const categories = new Set(this.articles.map(article => article.category));
      return categories.size;
    }
  },
  
  watch: {
    searchKeyword() {
      this.currentPage = 1;
    },
    selectedCategory() {
      this.currentPage = 1;
    }
  },
  
  mounted() {
    if (typeof localStorage !== 'undefined') {
      this.loadArticles();
    }
  },
  
  methods: {
    loadArticles() {
      if (typeof localStorage === 'undefined') return;
      
      const articles = JSON.parse(localStorage.getItem('blog-articles') || '[]');
      this.articles = articles.sort((a, b) => new Date(b.uploadTime) - new Date(a.uploadTime));
    },
    
    formatDate(dateString) {
      const date = new Date(dateString);
      return date.toLocaleDateString('zh-CN', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
    },
    
    viewArticle(article) {
      this.selectedArticle = article;
    },
    
    closeModal() {
      this.selectedArticle = null;
    },
    
    editArticle(article) {
      // 跳转到编辑页面
      if (typeof window !== 'undefined') {
        window.location.href = `/blog/edit?file=${encodeURIComponent(article.fileName)}`;
      }
    },
    
    deleteArticle(article) {
      if (typeof window === 'undefined' || typeof localStorage === 'undefined') return;
      
      if (confirm(`确定要删除文章「${article.title}」吗？`)) {
        const articles = JSON.parse(localStorage.getItem('blog-articles') || '[]');
        const updatedArticles = articles.filter(a => a.fileName !== article.fileName);
        localStorage.setItem('blog-articles', JSON.stringify(updatedArticles));
        this.loadArticles();
      }
    },
    
    renderMarkdown(content) {
      // 简单的markdown渲染
      return content
        .replace(/^# (.*$)/gim, '<h1>$1</h1>')
        .replace(/^## (.*$)/gim, '<h2>$1</h2>')
        .replace(/^### (.*$)/gim, '<h3>$1</h3>')
        .replace(/^#### (.*$)/gim, '<h4>$1</h4>')
        .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
        .replace(/\*(.*?)\*/g, '<em>$1</em>')
        .replace(/`(.*?)`/g, '<code>$1</code>')
        .replace(/\n\n/g, '</p><p>')
        .replace(/\n/g, '<br>')
        .replace(/^(.*)$/gim, '<p>$1</p>')
        .replace(/<p><h/g, '<h')
        .replace(/<\/h([1-6])><\/p>/g, '</h$1>');
    }
  }
}
</script>

<style scoped>
.blog-list-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

.filter-section {
  display: flex;
  gap: 15px;
  margin-bottom: 20px;
  flex-wrap: wrap;
}

.search-input,
.category-filter {
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
}

.search-input {
  flex: 1;
  min-width: 200px;
}

.category-filter {
  min-width: 150px;
}

.stats-section {
  display: flex;
  gap: 30px;
  margin-bottom: 30px;
  padding: 20px;
  background: #f8f9fa;
  border-radius: 8px;
}

.stat-item {
  text-align: center;
}

.stat-number {
  display: block;
  font-size: 24px;
  font-weight: bold;
  color: #007bff;
}

.stat-label {
  font-size: 14px;
  color: #666;
}

.articles-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 20px;
  margin-bottom: 30px;
}

.article-card {
  background: white;
  border: 1px solid #e9ecef;
  border-radius: 8px;
  padding: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.article-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.article-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 10px;
}

.article-title {
  margin: 0;
  font-size: 18px;
  color: #333;
  flex: 1;
  margin-right: 10px;
}

.article-category {
  background: #007bff;
  color: white;
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 12px;
  white-space: nowrap;
}

.article-meta {
  margin-bottom: 10px;
  color: #666;
  font-size: 14px;
}

.icon-time {
  margin-right: 5px;
}

.article-description {
  color: #666;
  font-size: 14px;
  line-height: 1.5;
  margin-bottom: 15px;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.article-tags {
  margin-bottom: 15px;
}

.tag {
  display: inline-block;
  background: #f8f9fa;
  color: #495057;
  padding: 2px 8px;
  border-radius: 12px;
  font-size: 12px;
  margin-right: 5px;
  margin-bottom: 5px;
}

.article-actions {
  display: flex;
  gap: 10px;
}

.action-btn {
  padding: 6px 12px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 12px;
  transition: background-color 0.3s;
}

.edit-btn {
  background: #28a745;
  color: white;
}

.edit-btn:hover {
  background: #218838;
}

.delete-btn {
  background: #dc3545;
  color: white;
}

.delete-btn:hover {
  background: #c82333;
}

.empty-state {
  text-align: center;
  padding: 60px 20px;
  color: #666;
}

.empty-icon {
  font-size: 48px;
  margin-bottom: 20px;
}

.upload-link {
  display: inline-block;
  margin-top: 20px;
  padding: 10px 20px;
  background: #007bff;
  color: white;
  text-decoration: none;
  border-radius: 4px;
  transition: background-color 0.3s;
}

.upload-link:hover {
  background: #0056b3;
}

.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 15px;
  margin-top: 30px;
}

.page-btn {
  padding: 8px 16px;
  border: 1px solid #ddd;
  background: white;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.3s;
}

.page-btn:hover:not(:disabled) {
  background: #007bff;
  color: white;
  border-color: #007bff;
}

.page-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.page-info {
  color: #666;
  font-size: 14px;
}

/* 模态框样式 */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal-content {
  background: white;
  border-radius: 8px;
  max-width: 800px;
  max-height: 80vh;
  width: 90%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px;
  border-bottom: 1px solid #eee;
}

.modal-header h2 {
  margin: 0;
  color: #333;
}

.close-btn {
  background: none;
  border: none;
  font-size: 24px;
  cursor: pointer;
  color: #666;
  padding: 0;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.close-btn:hover {
  color: #333;
}

.modal-body {
  padding: 20px;
  overflow-y: auto;
  flex: 1;
}

.article-info {
  display: flex;
  gap: 20px;
  margin-bottom: 20px;
  padding-bottom: 15px;
  border-bottom: 1px solid #eee;
}

.info-item {
  color: #666;
  font-size: 14px;
}

.article-content {
  line-height: 1.6;
  color: #333;
}

.article-content h1,
.article-content h2,
.article-content h3,
.article-content h4 {
  margin-top: 20px;
  margin-bottom: 10px;
  color: #333;
}

.article-content p {
  margin-bottom: 15px;
}

.article-content code {
  background: #f8f9fa;
  padding: 2px 4px;
  border-radius: 3px;
  font-family: 'Courier New', monospace;
}

@media (max-width: 768px) {
  .articles-grid {
    grid-template-columns: 1fr;
  }
  
  .filter-section {
    flex-direction: column;
  }
  
  .stats-section {
    flex-direction: column;
    gap: 15px;
  }
  
  .modal-content {
    width: 95%;
    max-height: 90vh;
  }
}
</style>